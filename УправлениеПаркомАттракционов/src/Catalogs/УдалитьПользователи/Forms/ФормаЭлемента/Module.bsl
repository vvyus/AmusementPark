
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПользовательИБ = 
		ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);
		
	Если ПользовательИБ = Неопределено Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	КонецЕсли;
	
	ПользовательИБ.АутентификацияСтандартная = ДоступРазрешен;
	ПользовательИБ.ПолноеИмя = Объект.Наименование;
	ПользовательИБ.Имя = Логин;
	
	Если ПарольУстановлен Тогда
		ПользовательИБ.Пароль = Пароль;
	КонецЕсли;
	
	ПользовательИБ.Роли.Очистить();
	
	Если РольПользователя = Перечисления.РолиПользователей.Администратор Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
	ИначеЕсли РольПользователя = Перечисления.РолиПользователей.Кассир Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.Кассир);
	ИначеЕсли РольПользователя = Перечисления.РолиПользователей.ОператорАттракциона Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ОператорАттракциона);	
	КонецЕсли;
		
	ПользовательИБ.Записать();	
	
	ТекущийОбъект.ИдентификаторПользователяИБ = ПользовательИБ.УникальныйИдентификатор;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПользовательИБ = 
		ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);

	Если ПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ДоступРазрешен = ПользовательИБ.АутентификацияСтандартная;
	Логин = ПользовательИБ.Имя;
	
	Если ЗначениеЗаполнено(ПользовательИБ.СохраняемоеЗначениеПароля) Тогда		
		Пароль = "******";
	КонецЕсли;
	
	ЭтоАдминистратор = Ложь;
	ЭтоКассир = Ложь;
	ЭтоОператорАттракциона = Ложь;
	
	Для Каждого Роль Из ПользовательИБ.Роли Цикл
		
		Если Роль = Метаданные.Роли.ПолныеПрава Тогда
			ЭтоАдминистратор = Истина;
		ИначеЕсли Роль = Метаданные.Роли.Кассир Тогда
			ЭтоКассир = Истина;
		ИначеЕсли Роль = Метаданные.Роли.ОператорАттракциона Тогда
			ЭтоОператорАттракциона = Истина;
		КонецЕсли;
		
	КонецЦикла;
		
	Если ЭтоАдминистратор Тогда
		РольПользователя = Перечисления.РолиПользователей.Администратор;
	ИначеЕсли ЭтоКассир Тогда
		РольПользователя = Перечисления.РолиПользователей.Кассир;
	ИначеЕсли ЭтоОператорАттракциона Тогда
		РольПользователя = Перечисления.РолиПользователей.ОператорАттракциона;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Пароль = "******";
	Элементы.Пароль.РежимПароля = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ПарольУстановлен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДоступРазрешенПриИзменении(Элемент)
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгенерироватьПароль(Команда)
	
	Пароль = СлучайныйПароль();
	Элементы.Пароль.РежимПароля = Ложь;
	ПарольУстановлен = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СлучайныйПароль()
	
	ГСП = Новый ГенераторСлучайныхПаролей();
	Возврат ГСП.СлучайныйПароль(8, Истина);	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностьюЭлементовФормы(Форма)
	
	УправлениеПользователемДоступно = Форма.ДоступРазрешен;
	
	Форма.Элементы.Логин.Доступность = УправлениеПользователемДоступно;
	Форма.Элементы.ГруппаПароль.Доступность = УправлениеПользователемДоступно;
	Форма.Элементы.РольПользователя.Доступность = УправлениеПользователемДоступно;	
	
КонецПроцедуры

#КонецОбласти
